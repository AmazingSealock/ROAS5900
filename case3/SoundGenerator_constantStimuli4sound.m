clear;clc;Fs = 11025;  % 采样频率t = 0:1/Fs:2;  % 时间向量gain = 5;  % 增益因子disp(' ');disp('----------------------------- SOUND TEST -----------------------------');disp(' '); disp('Welcome! This experiment is designed to test sound loudness.');disp(' '); disp('Press Ctrl-C to quit at any time.');disp(' '); disp('**********************************************************************');disp('** WARNING!!!!: PLEASE REMEMBER TO ADJUST VOLUME BEFORE EXPERIMENT **');disp('**********************************************************************');disp(' '); disp('Press enter to continue...'); pause;% frequency_std = input('Specify the frequency of the sound (Hz): '); frequency_std = 50;loudness_array = input('Specify the loudness levels (e.g., [0.5, 1]): '); num = input('Specify the number of repetitions: '); % duration = input('Specify the duration for each sound playback (in seconds): '); fprintf("Press any key to start...\n");pause;% 播放原音量和调试音量for r = 1:num    for j = 1:length(loudness_array)        % 生成声音        sound_wave = sin(2 * pi * frequency_std * t);  % 生成正弦波        % 播放原声音        original_loudness = loudness_array(1);  % 原音量        fprintf('Playing original sound at loudness: %.2f\n', original_loudness);         sound(sound_wave * original_loudness * gain, Fs);  % 播放原音量        pause(1);  % 根据指定的持续时间暂停        pause(3);  % 在两次播放之间加入间隔时间        % 播放调试声音        current_loudness = loudness_array(j);  % 当前调试响度        fprintf('Playing modified sound at loudness: %.2f\n', current_loudness);         sound(sound_wave * current_loudness * gain, Fs);  % 播放当前音量        pause(1);  % 根据指定的持续时间暂停        % 询问用户是否感知到变化        SameOrNot = input('Do you perceive any difference? (Yes: 1; No: 0): ');            log((r-1) * length(loudness_array) + j, :) = [current_loudness, frequency_std, SameOrNot];     endend% 计算结果for j = 1:length(loudness_array)    prop = sum(log(log(:, 1) == loudness_array(j), 3) == 1) / num;     fprintf("Percentage of detection for loudness %.2f: %.2f%%\n", loudness_array(j), prop * 100);end