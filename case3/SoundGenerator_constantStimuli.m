clear all;clcFs = 11025;t = [0 : 1/Fs : 2];f_min=49;f_max=1000;K=-log(10^(35/10));K2=-log(10^(5/10));disp(' ');disp('-----------------------------CONSTANT STIMULI EXPERIMENT-----------------------------');disp(' ');disp('Welcome! This experiment is designed to test your difference threshold');disp(' ');disp('You may press Ctrl-C to quit at any time.');disp(' ');disp('**********************************************************************');disp('** WARNING!!!!: PLEASE REMEMBER TO ADJUST VOLUMNE BEFORE EXPERIMENT **');disp('**********************************************************************');disp(' ');disp('Press enter to continue...');disp(' ');pause;name = '';frequency_std = input('Press specify the frequency of the standard sound: ');disp(' ');    sprintf('Frequency of the sound <%d> (Hz)',frequency_std);loudness = input('Press specify the loudness of the sound: ');disp(' ');    sprintf('Loudness of the stimuli <%d> (Hz)',loudness);diff = input('Press specify the difference of the frequency (in a vector, e.g, [-1,0,1]): ');disp(' ');    sprintf('Difference of the stimuli <%d> (Hz)',diff);num = input('Press specify the number of the repetition for each pair: ');disp(' ');    sprintf('Difference of the repetition <%d> (Hz)',num);fprintf("Press any key to start...")disp(' ');   pause% repeat and randomizefor i = 1:length(diff)    for j = 1:num        sound_pair(j+(i-1)*num,:) = [frequency_std, frequency_std+diff(i), diff(i)];    endendsound_pair_rd = sound_pair(randperm(length(sound_pair)),:);% Play soundfor k = 1:length(sound_pair_rd)    if sound_pair_rd(k,1) < 1000        sounds_std=(exp(K*(sound_pair_rd(k,1)-1000)/(1000-50))/3)*sin(2*pi*sound_pair_rd(k,1)*t);    else        sounds_std=(exp(K2*(sound_pair_rd(k,1)-5000)/(5000-1000))/exp(K2))/3*sin(2*pi*sound_pair_rd(k,1)*t);    end    if sound_pair_rd(k,2) < 1000        sounds_cpr=(exp(K*(sound_pair_rd(k,2)-1000)/(1000-50))/3)*sin(2*pi*sound_pair_rd(k,2)*t);    else        sounds_cpr=(exp(K2*(sound_pair_rd(k,2)-5000)/(5000-1000))/exp(K2))/3*sin(2*pi*sound_pair_rd(k,2)*t);    end    % Play the sound    sound(sounds_std*loudness,Fs);    pause(3)    sound(sounds_cpr*loudness,Fs);    SameOrNot = input('Are they the same? (Yes: 1; No: 0): ');        log(k,:) = [loudness, frequency_std, sound_pair_rd(k,3), SameOrNot]end% calculatefor m = 1:length(diff)    sprintf("percentage of detection when diff = <%d>: ", diff(m))    prop = sum(log(:,3)==diff(m) & log(:,4)==1)/sum(log(:,3)==diff(m))    prop_vec(m) = prop;    disp(" ");end% Plotfigure()plot(1:length(diff),prop_vec);